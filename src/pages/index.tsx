import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const utils = trpc.useContext();

  const { data } = trpc.useQuery(["example.getAll"]);

  const { mutate } = trpc.useMutation(["example.addNote"], {
    onSuccess: () => {
      utils.invalidateQueries(["example.getAll"]);
    },
  });

  return (
    <>
      <Head>
        <title>Noted App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center w-1/2 min-h-screen mx-auto">
        <h1 className="font-extrabold text-center text-7xl">
          <span className="text-blue-500">Noted</span> App
        </h1>

        <div className="w-fit mt-6">
          <button
            onClick={() => {
              mutate({ name: "New Note", content: "New Content" });
            }}
          >
            Add Note
          </button>
          <div className="py-6 text-2xl">
            {data && (
              <p>
                {data.notes.map((note) => {
                  return (
                    <div className="mb-6" key={note.id}>
                      <div>{note.name}</div>
                      <div>{note.content}</div>
                    </div>
                  );
                })}
              </p>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
